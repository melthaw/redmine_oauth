# frozen_string_literal: true

# Redmine plugin OAuth
#
# Karel Piƒçman <karel.picman@kontron.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

en:
  oauth_login_via: "Continue with <b>%{oauth}</b>"
  oauth_login_with: Login with OAuth
  oauth_no_verified_email: No verified email provided, check your settings on OAuth provider site.
  oauth_invalid_provider: Invalid OAuth provider
  oauth_none: None
  oauth_provider: Provider
  oauth_provider_info: OAuth provider.
  oauth_site: Site
  oauth_site_info: OAuth provider's authentication URL.
  oauth_client_id: Client ID
  oauth_client_id_info: Application (client) ID.
  oauth_client_secret: Client secret
  oauth_client_secret_info: Application password.
  oauth_tenant_id: Tenant ID / Realm
  oauth_tenant_id_info: Directory (tenant) ID.
  oauth_button_info: Colour and icon (Awesome font class) of the OAuth login button (Empty for no button).
  oauth_login_button: Login button
  oauth_custom_name: Provider name
  oauth_custom_name_info: Title to be shown on the OAuth login button.
  oauth_custom_auth_endpoint: Auth endpoint
  oauth_custom_auth_endpoint_info: Application Auth endpoint.
  oauth_custom_token_endpoint: Token endpoint
  oauth_custom_token_endpoint_info: Application Token endpoint.
  oauth_custom_profile_endpoint: Profile endpoint
  oauth_custom_profile_endpoint_info: Application Profile endpoint.
  oauth_custom_scope: OAuth scope
  oauth_custom_scope_info: "OAuth scope (default: 'openid profile email')."
  oauth_custom_uid_field: UID field
  oauth_custom_uid_field_info: "UID field (default: preferred_username)."
  oauth_custom_email_field: Email field
  oauth_custom_email_field_info: "Email field (default: email)."
  oauth_hide_login_form: Hide login form
  oauth_custom_firstname_field: Provider's firstname field
  oauth_custom_lastname_field: Provider's lastname field
  oauth_auto_assign_projects: Assign to project name(s)
  oauth_auto_assign_roles: Assign to role name(s)
  oauth_update_login: Update login
  oauth_update_login_info: Update the user's login after a successful login.
  oauth_logout: OAuth logout
  oauth_logout_info: Log out from the OAuth provider too after Redmine logout.
  oauth_login: OAuth login
  oauth_login_info: Allow users to log in automatically via OAuth provider skipping the login form.
  oauth_custom_logout_endpoint: Logout endpoint
  oauth_custom_logout_endpoint_info: Application Logout endpoint.
  oauth_validate_user_roles: Validate user roles
  oauth_validate_user_roles_info: "A key, where user roles are present in the token. If set, 'user' role grants access, 
    'admin' grants admin rights. If 'user' role is not present, access is denied. If 'admin role is missing, admin 
    rights are revoked. E.g.: Enter 'resource_access.redmine.roles', if you have your token set as follows:
    'resource_access': { 'redmine': { 'roles': ['user', 'admin'] } }"
  oauth_autologin: "Autologin with %{oauth}"
